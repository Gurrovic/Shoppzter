@inject IShoppingListService _shoppingListService

<EditForm Model="@shoppingList" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <div>
        <label for="shoppingListName">Name:</label>        
        <FocusableInputText 
            Autofocus="true" 
            class="form-control" 
            @bind-Value="@shoppingList.Name" />
    </div>   

    <div class="blazored-modal-footer">
        <button type="submit" class="btn btn-success" style="margin-right: 5px;">Save</button>
        <button @onclick="Close" class="btn btn-danger">Close</button>
    </div>
</EditForm>

@code {
    [CascadingParameter] 
    BlazoredModalInstance BlazoredModal { get; set; } = default!;    
    
    public ShoppingList shoppingList { get; set; } = new ShoppingList();    

    private async Task Close() => await BlazoredModal.CancelAsync();    

    private async Task HandleValidSubmit()
    {
        await _shoppingListService.AddShoppingList(shoppingList);   
        await BlazoredModal.CloseAsync(ModalResult.Ok(shoppingList));
        shoppingList = new ShoppingList(); // Reset the model to clear the form        
    }    
}
