@if (IsVisible)
{
    <div class="gv-modal-background" @onclick="CloseModal">
        <div class="gv-modal" @onclick:stopPropagation style="@ModalStyle">
            <div class="gv-modal-header">
                <h3>@Header</h3>                
            </div>
            <div class="gv-modal-body">
                @Content
            </div>
            <div class="gv-modal-footer">             
                @Buttons
            </div>
        </div>
    </div>
}

@code {

    [Parameter]
    public RenderFragment? Content { get; set; }

    [Parameter]
    public RenderFragment? Buttons { get; set; }

    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public string Header { get; set; } = string.Empty;

    [Parameter]
    public int? Width { get; set; }

    [Parameter]
    public int? Height{ get; set; }

    [Parameter]
    public EventCallback<bool> IsVisibleChanged { get; set; }    

    private async Task CloseModal()
    {
        IsVisible = false;
        await IsVisibleChanged.InvokeAsync(IsVisible);
    }
        
    private string ModalStyle
    {
        get
        {
            var style = "";
            if (Width.HasValue)
            {
                style += $"width: {Width.Value}px;";
            }
            if (Height.HasValue)
            {
                style += $" height: {Height.Value}px;";
            }
            return style;
        }
    }
}
