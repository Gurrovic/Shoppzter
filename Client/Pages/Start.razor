@page "/"
@inject IShoppingListService _shoppingListService
@inject IToastService _toastService

<PageTitle>Shoppzter</PageTitle>

<div class="shopping-list-container">
    <div class="top-button-1" @onclick="HandleClick">    
        <i class="bi bi-plus-circle"/>
        <span class="top-button-text">New List</span>
    </div>

    @if(shoppingLists.Count > 0)
    {
        <ShoppingListsComponent shoppingLists="shoppingLists"
                                OnDelete="HandleListChanged" />
    }
    else
    {    
        <div class="no-lists">No lists. Create your first list!</div>    
    }
</div>

<ShoppingListModal Model="@Model"
                   ShowDialog="@ShowDialog" 
                   OnShoppingListAdded="HandleShoppingListAdded"/>



@code {

    private List<ShoppingList> shoppingLists = new List<ShoppingList>();

    private ShoppingList Model { get; set; } = new ShoppingList();

    private bool ShowDialog { get; set; }    

    protected override async Task OnInitializedAsync()
    {
        shoppingLists = await _shoppingListService.GetShoppingLists();
    } 

    private void HandleClick()
    {
        Model = new ShoppingList();
        ShowDialog = true;        
    }

    private async Task HandleShoppingListAdded(ShoppingList Model)
    {
        _toastService.ShowSuccess($"New list created: {Model.Name}");
        await _shoppingListService.AddShoppingList(Model);
        shoppingLists = await _shoppingListService.GetShoppingLists();        
    }

    private void HandleListChanged(ShoppingList Model)
    {
        _toastService.ShowSuccess($"List deleted: {Model.Name}");
        Model = new ShoppingList();
        ShowDialog = false;
        StateHasChanged();
    }
}